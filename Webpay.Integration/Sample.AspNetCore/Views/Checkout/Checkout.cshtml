@using Sample.AspNetCore.Webpay
@using Webpay.Integration.Util.Constant
@{
    ViewData["Title"] = "Checkout";
    var isCompany = TempData["IsCompany"] != null && Convert.ToBoolean(TempData["IsCompany"]);

    var country = TempData["CountryId"] != null ? TempData["CountryId"].ToString() : "SE";
    var testCustomers = new List<dynamic>();

    if(country == "NO")
    {
        testCustomers = new List<dynamic>
        {
            new { Result = "Approved", PersonOrOrgNr = "17054512066", CustomerType = "Private", Description = "Credit check successful." },
            new { Result = "Denied", PersonOrOrgNr = "14077421433", CustomerType = "Private", Description = "Credit not approved; order can still be placed." },
            new { Result = "Abuse", PersonOrOrgNr = "30036549854", CustomerType = "Private", Description = "Flagged for potential fraud." },
            new { Result = "Limit", PersonOrOrgNr = "22084419684", CustomerType = "Private", Description = "Credit limit reached." },
            new { Result = "Approved", PersonOrOrgNr = "923313850", CustomerType = "Company", Description = "Credit check successful." },
            new { Result = "Denied", PersonOrOrgNr = "842852102", CustomerType = "Company", Description = "Credit not approved; order can still be placed." },
            new { Result = "Abuse", PersonOrOrgNr = "931024280", CustomerType = "Company", Description = "Flagged for potential fraud." },
            new { Result = "Limit", PersonOrOrgNr = "812345672", CustomerType = "Company", Description = "Credit limit reached." }
        };
    }
    else if(country == "FI")
    {
        testCustomers = new List<dynamic>
        {
            new { Result = "Approved", PersonOrOrgNr = "160264-999N", CustomerType = "Private", Description = "Credit check successful." },
            new { Result = "Denied", PersonOrOrgNr = "111248-999C", CustomerType = "Private", Description = "Credit not approved; order can still be placed." },
            new { Result = "Abuse", PersonOrOrgNr = "261295-9985", CustomerType = "Private", Description = "Flagged for potential fraud." },
            new { Result = "Limit", PersonOrOrgNr = "261295-9985", CustomerType = "Private", Description = "Credit limit reached." },
            new { Result = "Approved", PersonOrOrgNr = "9999999-2", CustomerType = "Company", Description = "Credit check successful." },
            new { Result = "Denied", PersonOrOrgNr = "8888888-3", CustomerType = "Company", Description = "Credit not approved; order can still be placed." },
            new { Result = "Abuse", PersonOrOrgNr = "7777777-4", CustomerType = "Company", Description = "Flagged for potential fraud." },
            new { Result = "Limit", PersonOrOrgNr = "6666666-5", CustomerType = "Company", Description = "Credit limit reached." }
        };
    }
    else
    {
        testCustomers = new List<dynamic>
        {
            new { Result = "Approved", PersonOrOrgNr = "4605092222", CustomerType = "Private", Description = "Credit check successful." },
            new { Result = "Denied", PersonOrOrgNr = "4610081111", CustomerType = "Private", Description = "Credit not approved; order can still be placed." },
            new { Result = "Abuse", PersonOrOrgNr = "4606082222", CustomerType = "Private", Description = "Flagged for potential fraud." },
            new { Result = "Limit", PersonOrOrgNr = "4611071111", CustomerType = "Private", Description = "Credit limit reached." },
            new { Result = "Approved", PersonOrOrgNr = "4608142222", CustomerType = "Company", Description = "Credit check successful." },
            new { Result = "Denied", PersonOrOrgNr = "4608302222", CustomerType = "Company", Description = "Credit not approved; order can still be placed." },
            new { Result = "Abuse", PersonOrOrgNr = "4609191111", CustomerType = "Company", Description = "Flagged for potential fraud." },
            new { Result = "Limit", PersonOrOrgNr = "4506172222", CustomerType = "Company", Description = "Credit limit reached." }
        };
    }

    var isVisible = TempData["IsTestCustomersVisible"] == null ? true : TempData["IsTestCustomersVisible"].ToString()?.ToLower() == "true";
    var useBankID = TempData["UseBankID"] != null ? Convert.ToBoolean(TempData["UseBankID"]) : false;
    var useKalp = TempData["UseKalp"] != null ? Convert.ToBoolean(TempData["UseKalp"]) : false;

    var config = new WebpayConfig();
    var countryCode = country.GetCountryCode();
    var wsEndPoint = config.GetEndPoint(PaymentType.INVOICE);
    var asEndPoint = config.GetEndPoint(PaymentType.ADMIN_TYPE);
    var webpayConfigVisible = false;

    var approvedPrivate = testCustomers.FirstOrDefault(x => x.Result == "Approved" && x.CustomerType == "Private");
    var approvedCompany = testCustomers.FirstOrDefault(x => x.Result == "Approved" && x.CustomerType == "Company");
    var privateSSN = approvedPrivate != null ? approvedPrivate.PersonOrOrgNr : "";
    var companySSN = approvedCompany != null ? approvedCompany.PersonOrOrgNr : "";
    var ssnPlaceholder = isCompany ? companySSN : privateSSN;
    
    var emailPlaceholder = "test@svea.com";
    var phonePlaceholder = "01111111";
}

<div class="container mt-4">
    <h1 class="mb-4 text-center">Svea Standalone Checkout</h1>

    <form id="toggleVisibilityForm" method="post" action="/CheckOut/UpdateTestCustomersVisibility">
        <input type="hidden" id="isTestCustomersVisible" name="IsTestCustomersVisibleInput" value="true" />
    </form>

    <button id="toggleTestCustomers" class="btn btn-sm btn-primary" style="position: absolute; top: 180px; right: 20px; z-index: 1001;">
        >
    </button>

    <div class="test-customers" id="testCustomers" style="position: absolute; top: 200px; right: 40px; width: 300px; z-index: 1000; display: @(isVisible ? "block" : "none");">
        <div class="card p-3" style="max-width: 100%;">
            <h5 class="text-center">Test Customers</h5>
            <ul class="list-group list-group-flush small">
                @foreach (var customer in testCustomers)
                {
                    <li class="list-group-item p-1">
                        <strong>@customer.Result</strong> -
                        @customer.PersonOrOrgNr -
                        @customer.CustomerType<br />
                        <span class="text-muted">@customer.Description</span>
                    </li>
                }
            </ul>
        </div>
    </div>

    <button id="toggleWebpayConfig" class="btn btn-sm btn-secondary mt-4">
        Webpay Config
    </button>

    <div id="webpayConfig" class="card mt-2" style="display:@(webpayConfigVisible ? "block" : "none");">
        <div class="card-header">
            Webpay Config Settings (Country: @country)
        </div>
        <div class="card-body">
            <table class="table table-bordered table-sm">
                <thead>
                    <tr>
                        <th colspan="5" class="text-center" style="padding-top:15px;">Credentials</th>
                    </tr>
                    <tr>
                        <th>Payment Type</th>
                        <th>Username</th>
                        <th>Password</th>
                        <th>Client Number</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Invoice</td>
                        <td>@config.GetUsername(PaymentType.INVOICE, countryCode)</td>
                        <td>@config.GetPassword(PaymentType.INVOICE, countryCode)</td>
                        <td>@config.GetClientNumber(PaymentType.INVOICE, countryCode)</td>
                    </tr>
                    <tr>
                        <td>PaymentPlan</td>
                        <td>@config.GetUsername(PaymentType.PAYMENTPLAN, countryCode)</td>
                        <td>@config.GetPassword(PaymentType.PAYMENTPLAN, countryCode)</td>
                        <td>@config.GetClientNumber(PaymentType.PAYMENTPLAN, countryCode)</td>
                    </tr>
                    @if (countryCode == CountryCode.SE)
                    {
                        <tr>
                            <td>AccountCredit</td>
                            <td>@config.GetUsername(PaymentType.ACCOUNTCREDIT, countryCode)</td>
                            <td>@config.GetPassword(PaymentType.ACCOUNTCREDIT, countryCode)</td>
                            <td>@config.GetClientNumber(PaymentType.ACCOUNTCREDIT, countryCode)</td>
                        </tr>
                    }
                </tbody>
                <thead>
                    <tr>
                        <th colspan="5" class="text-center" style="padding-top:15px;">Endpoints</th>
                    </tr>
                    <tr>
                        <th>Service</th>
                        <th colspan="4">URL</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>WebService</td>
                        <td colspan="4">@wsEndPoint</td>
                    </tr>
                    <tr>
                        <td>AdminService</td>
                        <td colspan="4">@asEndPoint</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div class="use-bankid-container" style="margin-top: 20px; margin-bottom: 20px;">
        <form id="toggleBankIDForm" method="post" action="/CheckOut/UpdateUseBankID">
            <div class="form-check">
                <input type="checkbox" class="form-check-input" id="useBankID" name="useBankIDInput" value="true"
                       @(useBankID ? "checked" : "") onchange="this.form.submit()" />
                <label class="form-check-label" for="useBankID">Use BankID</label>
            </div>
        </form>
    </div>

    <div class="use-kalp-container" style="margin-top: 20px; margin-bottom: 20px;">
        <form id="toggleKalpForm" method="post" action="/CheckOut/UpdateUseKalp">
            <div class="form-check">
                <input type="checkbox" class="form-check-input" id="useKalp" name="useKalpInput" value="true"
                       @(useKalp ? "checked" : "") onchange="this.form.submit()" />
                <label class="form-check-label" for="useKalp">Use Kalp</label>
            </div>
        </form>
    </div>

    <div class="card p-4 mb-4">
        <h4 class="card-title">Enter Your Details</h4>
        <form asp-action="SubmitForm" method="post">
            <div class="mb-3">
                <label for="ssn" class="form-label">SSN</label>
                <input type="text" id="ssn" name="SSN" class="form-control" placeholder="@ssnPlaceholder" data-private-placeholder="@privateSSN" data-company-placeholder="@companySSN" required />
            </div>
            <div class="form-check mb-3">
                <input type="checkbox" id="isCompany" name="IsCompany" class="form-check-input" value="true" />
                <label for="isCompany" class="form-check-label">Is Company</label>
            </div>
            <div>
                <button type="submit" class="btn btn-primary">OK</button>
            </div>
        </form>
    </div>

    @if (ViewBag.Error != null)
    {
        <div class="alert alert-danger" role="alert">
            @ViewBag.Error
        </div>
    }

    @if (ViewBag.Addresses != null)
    {
        <div class="card p-4 mb-4">
            <h4 class="card-title">Customer Addresses</h4>
            <form asp-action="SaveSelectedAddress" method="post" id="addressSelectionForm">
                <ul class="list-group">
                    @for (var i = 0; i < ViewBag.Addresses.Length; i++)
                    {
                        var address = ViewBag.Addresses[i];
                        <li class="list-group-item">
                            <div class="form-check">
                                <input class="form-check-input"
                                       type="radio"
                                       name="selectedAddressIndex"
                                       id="address-@i"
                                       value="@i"
                                @(i == 0 ? "checked" : "")
                                       onchange="document.getElementById('addressSelectionForm').submit()" />
                                <label class="form-check-label" for="address-@i">
                                    <strong>@address.SecurityNumber</strong><br />
                                    @address.FirstName @address.LastName<br />
                                    @address.AddressLine1 @address.AddressLine2<br />
                                    @address.Zipcode @address.Postarea<br />
                                    <span>Phone: @address.PhoneNumber</span><br />
                                    <span>AddressSelector: @address.AddressSelector</span>
                                </label>
                            </div>
                        </li>
                    }
                </ul>
            </form>
        </div>
    }

    @if (ViewBag.ShowAdditionalFields == true)
    {
        <div class="card p-4">
            <h4 class="card-title">Finalize Your Order</h4>
            <form asp-action="FinalizeForm" method="post">
                <div class="mb-3">
                    <label for="phoneNumber" class="form-label">Phone Number</label>
                    <input type="text" id="phoneNumber" name="PhoneNumber" class="form-control" placeholder="@phonePlaceholder" required />
                </div>
                <div class="mb-3">
                    <label for="emailAddress" class="form-label">Email Address</label>
                    <input type="email" id="emailAddress" name="EmailAddress" class="form-control" placeholder="@emailPlaceholder" required />
                </div>
                <div class="mb-3">
                    <label for="paymentOption" class="form-label">Payment Option</label>
                    <select id="paymentOption" name="PaymentOption" class="form-select" onchange="handlePaymentOptionChange()">
                        <option value="Invoice">Invoice</option>
                        @if (!isCompany)
                        {
                            <option value="PaymentPlan">Payment Plan</option>
                            @if (countryCode == CountryCode.SE)
                            {
                                <option value="AccountCredit">Account Credit</option>
                            }
                        }
                    </select>
                </div>

                <div id="campaignSection" class="mb-3" style="display: none;">
                    <h5>Available Campaigns</h5>
                    <table id="campaignTable" class="table table-bordered" style="width: 95%; margin: auto;">
                        <thead>
                            <tr id="paymentPlanHeader">
                                <th>Campaign Code</th>
                                <th>Description</th>
                                <th>Contract Length (Months)</th>
                                <th>Monthly Factor</th>
                                <th>Initial Fee</th>
                                <th>Notification Fee</th>
                                <th>Interest Rate (%)</th>
                                <th>Interest-Free Months</th>
                                <th>Payment-Free Months</th>
                                <th>Amount Range</th>
                                <th>Select</th>
                            </tr>
                            <tr id="accountCreditHeader" style="display: none;">
                                <th>Campaign Code</th>
                                <th>Description</th>
                                <th>Initial Fee</th>
                                <th>Lowest Amount to Pay Per Month</th>
                                <th>Lowest Percent to Pay Per Month (%)</th>
                                <th>Lowest Order Amount</th>
                                <th>Interest Rate (%)</th>
                                <th>Notification Fee</th>
                                <th>Select</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>

                <input type="hidden" id="selectedCampaignCode" name="CampaignCode" />
                <div>
                    <button type="submit" id="finalizeButton" class="btn btn-success">Finalize</button>
                    <button type="button" id="showCampaignsButton" class="btn btn-primary" style="display: none;" onclick="fetchCampaigns()">Show Campaigns</button>
                </div>
            </form>
        </div>
    }
</div>

@section Scripts {
    <script>
        function handlePaymentOptionChange() {
            const paymentOption = document.getElementById("paymentOption").value;
            const finalizeButton = document.getElementById("finalizeButton");
            const showCampaignsButton = document.getElementById("showCampaignsButton");
            const campaignSection = document.getElementById("campaignSection");
            const paymentPlanHeader = document.getElementById("paymentPlanHeader");
            const accountCreditHeader = document.getElementById("accountCreditHeader");

            paymentPlanHeader.style.display = "none";
            accountCreditHeader.style.display = "none";

            if (paymentOption === "PaymentPlan") {
                paymentPlanHeader.style.display = "";
                finalizeButton.style.display = "none";
                showCampaignsButton.style.display = "block";
                campaignSection.style.display = "none";
            } else if (paymentOption === "AccountCredit") {
                accountCreditHeader.style.display = "";
                finalizeButton.style.display = "none";
                showCampaignsButton.style.display = "block";
                campaignSection.style.display = "none";
            } else {
                finalizeButton.style.display = "block";
                showCampaignsButton.style.display = "none";
                campaignSection.style.display = "none";
            }
        }

        async function fetchCampaigns() {
            const paymentOption = document.getElementById("paymentOption").value;
            const showCampaignsButton = document.getElementById("showCampaignsButton");

            try {
                const response = await fetch(`/CheckOut/GetCampaigns?paymentOption=${paymentOption}`);
                if (!response.ok) throw new Error("Failed to fetch campaigns.");

                const campaigns = await response.json();
                const campaignTableBody = document.querySelector("#campaignTable tbody");
                const hiddenSelectedCampaignCode = document.getElementById("selectedCampaignCode");
                campaignTableBody.innerHTML = "";

                campaigns.forEach((campaign, index) => {
                    let row;
                    if (paymentOption === "AccountCredit") {
                        row = `
                            <tr>
                                <td>${campaign.campaignCode}</td>
                                <td>${campaign.description}</td>
                                <td>${campaign.initialFee}</td>
                                <td>${campaign.lowestAmountToPayPerMonth}</td>
                                <td>${campaign.lowestPercentToPayPerMonth}%</td>
                                <td>${campaign.lowestOrderAmount}</td>
                                <td>${campaign.interestRatePercent}%</td>
                                <td>${campaign.notificationFee}</td>
                                <td>
                                    <input type="radio" name="CampaignCode" value="${campaign.campaignCode}" ${index === 0 ? "checked" : ""} />
                                </td>
                            </tr>
                        `;
                    } else {
                        row = `
                            <tr>
                                <td>${campaign.campaignCode}</td>
                                <td>${campaign.description}</td>
                                <td>${campaign.contractLengthInMonths}</td>
                                <td>${formatDecimal(campaign.monthlyAnnuityFactor)}</td>
                                <td>${campaign.initialFee}</td>
                                <td>${campaign.notificationFee}</td>
                                <td>${campaign.interestRatePercent}</td>
                                <td>${campaign.numberOfInterestFreeMonths}</td>
                                <td>${campaign.numberOfPaymentFreeMonths}</td>
                                <td>${campaign.fromAmount} - ${campaign.toAmount}</td>
                                <td>
                                    <input type="radio" name="CampaignCode" value="${campaign.campaignCode}" ${index === 0 ? "checked" : ""} />
                                </td>
                            </tr>
                        `;
                    }
                    campaignTableBody.insertAdjacentHTML("beforeend", row);
                });

                hiddenSelectedCampaignCode.value = campaigns[0].campaignCode;

                document.getElementById("campaignSection").style.display = "block";
                document.getElementById("finalizeButton").style.display = "block";
                showCampaignsButton.style.display = "none";

                document.addEventListener("change", (event) => {
                    if (event.target.name === "CampaignCode") {
                        const selectedCampaignCode = event.target.value;
                        document.getElementById("selectedCampaignCode").value = selectedCampaignCode;
                    }
                });
            } catch (error) {
                alert(error.message);
            }
        }

        function formatDecimal(value) {
            return value ? parseFloat(value).toFixed(2) : "N/A";
        }

        const toggleButton = document.getElementById("toggleTestCustomers");
        const testCustomersDiv = document.getElementById("testCustomers");
        const visibilityForm = document.getElementById("toggleVisibilityForm");
        const visibilityInput = document.getElementById("isTestCustomersVisible");
        let isVisible = @((TempData["IsTestCustomersVisible"] ?? "true").ToString().ToLower());

        toggleButton.addEventListener("click", () => {
            isVisible = !isVisible;

            if (isVisible) {
                testCustomersDiv.style.display = "block";
                toggleButton.textContent = ">";
            } else {
                testCustomersDiv.style.display = "none";
                toggleButton.textContent = "<";
            }

            visibilityInput.value = isVisible;
            visibilityForm.submit();
        });

        document.getElementById("toggleWebpayConfig").addEventListener("click", function () {
            var configDiv = document.getElementById("webpayConfig");
            if (configDiv.style.display === "none" || configDiv.style.display === "") {
                configDiv.style.display = "block";
            } else {
                configDiv.style.display = "none";
            }
        });

        document.getElementById("isCompany").addEventListener("change", function () {
            var ssnInput = document.getElementById("ssn");
            var privatePlaceholder = ssnInput.getAttribute("data-private-placeholder");
            var companyPlaceholder = ssnInput.getAttribute("data-company-placeholder");

            if (this.checked) {
                ssnInput.setAttribute("placeholder", companyPlaceholder);
            } else {
                ssnInput.setAttribute("placeholder", privatePlaceholder);
            }
        });

        function acceptPlaceholderOnEnter(inputElem) {
            inputElem.addEventListener("keydown", function(e) {
                //if (e.key === "Enter") {
                if (e.key === "Tab") {
                    if (!this.value.trim()) {
                        this.value = this.getAttribute("placeholder");
                    }
                    //e.preventDefault();
                }
            });
        }

        document.addEventListener("DOMContentLoaded", function() {
            var ssnInput = document.getElementById("ssn");
            var emailInput = document.getElementById("emailAddress");
            var phoneInput = document.getElementById("phoneNumber");
            // Attach listeners
            acceptPlaceholderOnEnter(ssnInput);
            acceptPlaceholderOnEnter(emailInput);
            acceptPlaceholderOnEnter(phoneInput);
        });

    </script>
}
