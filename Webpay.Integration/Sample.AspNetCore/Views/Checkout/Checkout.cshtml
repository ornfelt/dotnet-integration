@{
    ViewData["Title"] = "Checkout";
}

<div class="container mt-4">
    <h1 class="mb-4 text-center">Svea Standalone Checkout</h1>

    <div class="card p-4 mb-4">
        <h4 class="card-title">Enter Your Details</h4>
        <form asp-action="SubmitForm" method="post">
            <div class="mb-3">
                <label for="ssn" class="form-label">SSN</label>
                <input type="text" id="ssn" name="SSN" class="form-control" required />
            </div>
            <div class="form-check mb-3">
                <input type="checkbox" id="isCompany" name="IsCompany" class="form-check-input" value="true" />
                <label for="isCompany" class="form-check-label">Is Company</label>
            </div>
            <div>
                <button type="submit" class="btn btn-primary">OK</button>
            </div>
        </form>
    </div>

    @if (ViewBag.Error != null)
    {
        <div class="alert alert-danger" role="alert">
            @ViewBag.Error
        </div>
    }

    @if (ViewBag.Addresses != null)
    {
        <div class="card p-4 mb-4">
            <h4 class="card-title">Customer Addresses</h4>
            <ul class="list-group">
                @foreach (var address in ViewBag.Addresses)
                {
                    <li class="list-group-item">
                        <strong>@address.SecurityNumber</strong><br />
                        @address.FirstName @address.LastName<br />
                        @address.AddressLine1 @address.AddressLine2<br />
                        @address.Zipcode @address.Postarea<br />
                        <span>Phone: @address.PhoneNumber</span><br />
                        <span>AddressSelector: @address.AddressSelector</span>
                    </li>
                }
            </ul>
        </div>
    }

    @if (ViewBag.ShowAdditionalFields == true)
    {
        <div class="card p-4">
            <h4 class="card-title">Finalize Your Order</h4>
            <form asp-action="FinalizeForm" method="post">
                <div class="mb-3">
                    <label for="phoneNumber" class="form-label">Phone Number</label>
                    <input type="text" id="phoneNumber" name="PhoneNumber" class="form-control" required />
                </div>
                <div class="mb-3">
                    <label for="emailAddress" class="form-label">Email Address</label>
                    <input type="email" id="emailAddress" name="EmailAddress" class="form-control" required />
                </div>
                <div class="mb-3">
                    <label for="paymentOption" class="form-label">Payment Option</label>
                    <select id="paymentOption" name="PaymentOption" class="form-select" onchange="handlePaymentOptionChange()">
                        <option value="Invoice">Invoice</option>
                        <option value="PaymentPlan">Payment Plan</option>
                        <option value="AccountCredit">Account Credit</option>
                    </select>
                </div>

                <div id="campaignSection" class="mb-3" style="display: none;">
                    <label for="campaigns" class="form-label">Select Campaign</label>
                    <select id="campaigns" name="CampaignCode" class="form-select">
                    </select>
                </div>

                <div>
                    <button type="submit" id="finalizeButton" class="btn btn-success">Finalize</button>
                    <button type="button" id="showCampaignsButton" class="btn btn-primary" style="display: none;" onclick="fetchCampaigns()">Show Campaigns</button>
                </div>
            </form>
        </div>
    }
</div>

@section Scripts {
    <script>
        function handlePaymentOptionChange() {
            const paymentOption = document.getElementById("paymentOption").value;
            const finalizeButton = document.getElementById("finalizeButton");
            const showCampaignsButton = document.getElementById("showCampaignsButton");
            const campaignSection = document.getElementById("campaignSection");

            if (paymentOption === "PaymentPlan" || paymentOption === "AccountCredit") {
                finalizeButton.style.display = "none";
                showCampaignsButton.style.display = "block";
                campaignSection.style.display = "none";
            } else {
                finalizeButton.style.display = "block";
                showCampaignsButton.style.display = "none";
                campaignSection.style.display = "none";
            }
        }

        async function fetchCampaigns() {
            const paymentOption = document.getElementById("paymentOption").value;

            try {
                const response = await fetch(`/CheckOut/GetCampaigns?paymentOption=${paymentOption}`);
                if (!response.ok) throw new Error("Failed to fetch campaigns.");

                const campaigns = await response.json();
                const campaignSelect = document.getElementById("campaigns");
                console.log("campaigns", campaigns);
                campaignSelect.innerHTML = campaigns.map(c => `<option value="${c.campaignCode}">${c.description} (${c.contractLengthInMonths} months)</option>`).join("");

                document.getElementById("campaignSection").style.display = "block";
                document.getElementById("finalizeButton").style.display = "block";
            } catch (error) {
                alert(error.message);
            }
        }
    </script>
}
